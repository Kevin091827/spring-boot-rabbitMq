############  RabbitMQ  #################
######基本连接信息配置
#spring.rabbitmq.host=127.0.0.1
#基本连接信息 --- RabbitMQ的主机地址
spring.rabbitmq.host=localhost
#基本连接信息 --- 端口号
spring.rabbitmq.port=5672
#基本连接信息 --- 用户名
spring.rabbitmq.username=guest
#基本连接信息 --- 密码
spring.rabbitmq.password=guest
#基本连接信息 --- 虚拟主机
spring.rabbitmq.virtual-host=/
#基本连接信息 --- 连接（缓存）模式
spring.rabbitmq.cache.connection.mode=channel
######消息确认机制配置
#消息确认机制 --- 消息发送回调(默认false）
spring.rabbitmq.publisher-confirms=true
#消息确认机制 --- 消息发送失败返回回调（默认false）
spring.rabbitmq.publisher-returns=true
#消息确认机制 --- 是否开启手ack动确认模式
spring.rabbitmq.listener.direct.acknowledge-mode=manual
#消息确认机制 --- 是否开启手ack动确认模式
spring.rabbitmq.listener.simple.acknowledge-mode=manual
#默认创建一个AmqpAdmin的Bean 默认为: true
spring.rabbitmq.dynamic=true
######生产者配置
#生产者配置 --- 是否开始消息发送失败重试（默认也是false）
spring.rabbitmq.listener.simple.retry.enabled=true
#####消费者配置
#消费者配置 --- 指定最小的消费者数量.
spring.rabbitmq.listener.concurrency=10
#消费者配置 --- 指定最大的消费者数量
spring.rabbitmq.listener.max-concurrency=50
#消费者配置 --- 每个消费者每次监听时可拉取处理的消息数量。
spring.rabbitmq.listener.prefetch=5



############  数据库连接信息  #################
spring.datasource.username=root
spring.datasource.password=123
spring.datasource.url=jdbc:mysql://localhost:3306/mybatis?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
spring.datasource.driver-class-name=com.mysql.jdbc.Driver


############  redis连接信息  #################
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=123456
spring.cache.redis.time-to-live=5000
spring.cache.redis.cache-null-values=false
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=20
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=1000
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=5
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=3
#连接池中的连接数目
spring.redis.jedis.pool.max-total=20
spring.redis.jedis.pool.timeBetweenEvictionRunsMillis=1000
spring.redis.jedis.pool.numTestsPerEvictionRun=5
# 连接超时时间（毫秒）
spring.redis.timeout=1000
#默认是Simple，Simple适合单体或者开发环境使用
spring.cache.type=redis



